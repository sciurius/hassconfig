# Dashboard: Overzicht -- Slaapkamer                     -*- hass -*-
# New design based on tile cards.

[% PROCESS power_meter.tt -%]

[% INCLUDE section.tt
       name     = "Slaapkamer"
       icon     = "bed"
       navigate = "/lovelace-overzicht/slaapkamer" %]

    cards:

      # Media center tile.
      # Switches on/off the media center.
      # The icon changes with the media function selected.
      - type: tile
        entity: switch.slaapkamer_media_center
        name: Media Center
        icon: mdi:television
        card_mod:
         style:
            .: |
              ha-card {
                {% if states('sensor.mc_state') == 'TV' %}
                --card-mod-icon:mdi:television-box;
                --card-mod-icon-color:#4caf50;
                {% elif states('sensor.mc_state') == 'Video' %}
                --card-mod-icon:mdi:movie-open;
                --card-mod-icon-color:blue;
                {% elif states('sensor.mc_state') == 'ChromeCast' %}
                --card-mod-icon:mdi:cast-connected;
                --card-mod-icon-color:purple;
                {% elif is_state('switch.slaapkamer_media_center','on') %}
                --card-mod-icon:mdi:television-off;
                --card-mod-icon-color:red;
                {% else %}
                --card-mod-icon:mdi:television;
                --card-mod-icon-color:grey;
                {% endif %};
              }
            ha-tile-info$: |
              .secondary:after {
                content: '{%if has_value("sensor.mc_state") and states("sensor.mc_state") != "Off" %} - {{ states("sensor.mc_state") }}{% endif %}';
              }

      # Avondlichtje.
      - type: tile
        entity: light.slaapkamer_avondlichtje

      - [% INCLUDE power_meter
           name = "Media Center" sensor = "slaapkamer_media_center"
           icon = "television" %]

      # Fan on/off switch.
      # Only visible if the fan exists.
      - type: tile
        entity: switch.slaapkamer_fan
        visibility:
          - entity: switch.slaapkamer_fan
            <<: *v_available

      # Fan timer.
      # Only visible when the timer is running.
      - type: tile
        entity: timer.slaapkamer_fan
        name: Timer
        icon: mdi:fan
        visibility:
          - entity: timer.slaapkamer_fan
            <<: *v_active
          - entity: switch.slaapkamer_fan
            <<: *v_available

      # Warmtedeken switch.
      # Only visible when the warmtedeken exists.
      - [% INCLUDE switching_meter
           name = "\"Deken {% if is_state('automation.scheduled_switch_on_warmtedeken','on') %} (auto) {% endif %}\""
           sensor = "slaapkamer_warmtedeken_joan"
           icon = "radiator" %]
        tap_action:
          action: perform-action
          perform_action: automation.toggle
          target:
              entity_id: automation.scheduled_switch_on_warmtedeken

#     # Warmtedeken automation.
#      # Only visible when the warmtedeken exists.
#      - type: tile
#        entity: automation.scheduled_switch_on_warmtedeken
#        name: Deken auto
#        color: false
#        visibility:
#          - entity: switch.slaapkamer_warmtedeken_joan
#            <<: *v_available

      # Warmtedeken timer.
      # Only visible when the timer is running.
      - type: tile
        entity: timer.slaapkamer_warmtedeken_joan
        name: Timer
        icon: mdi:radiator
        visibility:
          - entity: timer.slaapkamer_warmtedeken_joan
            <<: *v_active
          - entity: switch.slaapkamer_warmtedeken_joan
            <<: *v_available
