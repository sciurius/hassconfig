# Dashboard: Overzicht -- Badkamer       -*- hass -*-
# WARNING: This is a generated file -- DO NOT EDIT

# To use card_mod, we must put it in a vertical-stack-in-card.
type: custom:vertical-stack-in-card
[% PROCESS v_anchors.tt -%]
[% PROCESS colours.tt -%]
[% PROCESS power_meter.tt -%]

# Mods: draw a border.
card_mod:
  style: |
    ha-card {
      border: 2px solid lightblue;
      padding: 5px;
    }

# The cards.
cards:

  # First, a heading card with temp/hum badges.
  - [% INCLUDE heading_card.tt name = "Badkamer" icon = "bathtub" %]
    tap_action:
      action: navigate
      navigation_path: /lovelace-overzicht/badkamer

  - type: grid
    columns: 2
    square: false
    cards:

      - type: tile
        entity: light.badkamer_verlichting
        name: Verlichting
        icon: mdi:dome-light
        visibility:
          - entity: light.badkamer_verlichting
            <<: *v_available

      - type: tile
        entity: sensor.uit
        name: Verlichting
        icon: mdi:dome-light
        visibility:
          - entity: light.badkamer_verlichting
            condition: state
            state: unavailable

      - type: tile
        entity: sensor.ithocve_fan_speed_status
        name: Afzuiging
        icon: mdi:fan
        visibility:
          - entity: sensor.ithocve_fan_speed_status
            condition: numeric_state
            above: 0
        card_mod:
          style:
            .: |
              ha-card {
                {% if states('sensor.ithocve_fan_info') == 'auto' %}
                --card-mod-icon:mdi:fan-auto
                {% elif states('sensor.ithocve_fan_info') == 'high' %}
                --card-mod-icon:mdi:fan-speed-3
                {% elif states('sensor.ithocve_fan_info') == 'low' %}
                --card-mod-icon:mdi:fan-speed-1
                {% elif states('sensor.ithocve_fan_info') == 'timer 1' %}
                --card-mod-icon:mdi:fan-clock
                {% elif states('sensor.ithocve_fan_info') == 'timer 2' %}
                --card-mod-icon:mdi:fan-clock
                {% elif states('sensor.ithocve_fan_info') == 'timer 3' %}
                --card-mod-icon:mdi:fan-clock
                {% else %}
                --card-mod-icon:mdi:fan
                {% endif %};
              }
            ha-tile-info$: |
              .secondary {
                {% if (states('sensor.ithocve_fan_speed')|int) <= 0 %} display: none; {% endif %}
              }
              .secondary:after {
                content: "{% if (states('sensor.ithocve_ventilation_setpoint')|int) > 0 %}({{ states('sensor.ithocve_ventilation_setpoint') }}%){% endif %}"
              }

     # - type: tile
     #   entity: sensor.ithocve_ventilation_setpoint
     #   name: Instelling
     #   icon: mdi:fan
     #   visibility:
     #     - entity: sensor.ithocve_ventilation_setpoint
     #       condition: numeric_state
     #       above: -1

      # - type: tile
      #   entity: switch.badkamerafzuiging
      #   name: Reset
      #   icon: mdi:fan-off
      #   visibility:
      #     - entity: sensor.ithocve_fan_info
      #       condition: state
      #       state: unavailable

      - type: tile
        entity: sensor.ithocve_fan_remaining_time
        name: Fan Timer
        visibility:
          - entity: sensor.ithocve_fan_remaining_time
            <<: *v_available
          - entity: sensor.ithocve_fan_remaining_time
            condition: numeric_state
            above: 0
  
      - [% INCLUDE switching_meter name = "Afzuiging" alwayson = 1 %]
            
      - type: tile
        entity: sensor.boiler_dhw_curflow
        name: Warm water
        icon: mdi:shower
        visibility:
          - entity: sensor.boiler_dhw_curflow
            <<: *v_available
          - entity: sensor.boiler_dhw_curflow
            condition: numeric_state
            above: 0

      - type: tile
        entity: switch.badkamerverwarming
        name: Verwarming
        visibility:
          - entity: switch.badkamerverwarming
            <<: *v_available
        card_mod:
          style:
            ha-tile-info$: |
              .secondary {
                visibility: hidden;
              }
              .secondary:before {
                visibility: visible;
                content: "{{ states('sensor.badkamerverwarming_energy_today') }} kWh"
              }
            
      - type: tile
        entity: timer.badkamerverwarming
        icon: mdi:radiator
        name: Timer
        visibility:
          - entity: timer.badkamerverwarming
            <<: *v_active
            
      - type: tile
        entity: input_boolean.badkamerverwarming_on_doorbell
        name: Deurbel actief
        visibility:
          - entity: switch.badkamerverwarming
            <<: *v_available


