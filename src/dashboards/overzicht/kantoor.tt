# Dashboard: Overzicht -- Kantoor       -*- hass -*-
# WARNING: This is a generated file -- DO NOT EDIT

# To use card_mod, we must put it in a vertical-stack-in-card.
type: custom:vertical-stack-in-card
[% PROCESS v_anchors.tt -%]

# Mods: draw a border.
card_mod:
  style: |
    ha-card {
      border: 2px solid #D0D0D0;
      padding: 5px;
    }

# The cards.
cards:

  # First, a heading card with temp/hum badges.
  - type: heading
    heading: Kantoor
    heading_style: title
    icon: mdi:account-network
    xxcard_mod:
      style: "ha-card .title { font-size: 30pt; }"

    badges:

      - type: entity
        entity: sensor.kantoor_temperature

      - type: entity
        entity: sensor.kantoor_humidity

    tap_action:
      action: navigate
      navigation_path: /lovelace-overzicht/6

  - type: grid
    columns: 2
    square: false
    cards:

      - type: tile
        entity: binary_sensor.home_assistant_website_update_available
        name: HASS Software
        visibility:
          - entity: binary_sensor.home_assistant_website_update_available
            condition: state
            state: "on"
        tap_action:
          action: url,
          url_path: "{{ state_attr('sensor.home_assistant_website','release_notes') }}"
        card_mod:
          style:
            ha-tile-info$: |
              .secondary {
                visibility: hidden;
              }
              .secondary:before {
                visibility: visible;
                content: 'Update available';
              }

      - type: tile
        entity: sensor.systems_wan_uptime
        name: WAN Up
        icon: mdi:wan
        card_mod:
          style:
            .: |
              ha-card {
                {% if states('sensor.systems_wan_uptime')|int<86400 %}
                --card-mod-icon-color: red
                {% endif %};
              }
            ha-tile-info$: |
              .secondary {
                visibility: hidden;
              }
              .secondary:before {
                visibility: visible;
                content: "{% from 'relative_time_plus.jinja' import relative_time_plus %}{{ relative_time_plus(states('sensor.systems_wan_uptime'),parts=2,abbr=true,compare_date=0)|replace(" and ",", ")}}";
              }

      - type: tile
        entity: sensor.home_assistant_website
        name: Hass Software

      - type: tile
        entity: sensor.nas1_volume_1_volume_used
        name: NAS1

      - type: tile
        entity: sensor.nextcloud_free_space
        name: NextCloud
        icon: mdi:cloud
        unit: "GiB free"
    
      - type: tile
        entity: sensor.www_disk_inuse
        name: WWW Server
        icon: mdi:cloud
        card_mod:
          style:
            .: |
              ha-card {
                {% if states('sensor.www_disk_inuse')|int >= 98 %}
                --card-mod-icon-color: red
                {% elif states('sensor.www_disk_inuse')|int >= 96 %}
                --card-mod-icon-color: orange
                {% endif %};
              }
    
      - type: tile
        entity: switch.radiatorfans
        name: Radiator fans
        icon: mdi:fan

      - type: tile
        entity: timer.radiatorfans
        icon: mdi:radiator
        name: Timer
        visibility:
          - entity: timer.radiatorfans
            <<: *v_active

      - type: tile
        entity: switch.kantoorkacheltje
        icon: mdi:heat-wave
        name: Kantoorkacheltje
        visibility:
          - entity: switch.kantoorkacheltje
            <<: *v_available

      - type: tile
        entity: timer.kantoorkacheltje
        icon: mdi:radiator
        name: Timer
        visibility:
          - entity: timer.kantoorkacheltje
            <<: *v_active
    
      - type: tile
        entity: switch.psw03
        name: Printer
        icon: mdi:printer

      - type: tile
        entity: light.bulb01
        name: Media Center actief
        visibility:
          - entity: switch.slaapkamer_media_center
            condition: state
            state: "on"
        card_mod:
          style:
            ha-tile-info$: |
              .secondary {
                visibility: hidden;
              }
              .secondary:before {
                visibility: visible;
                content: "{{ states('sensor.mc_state') }}";
              }
