# templates

sensor:                 ################

# sensor.mc_state
# Returns the state of select.tv_slaapkamer as a string.
# This makes it a read-only sensor.

- name: "MC State"
  state: "{{ states('select.slaapkamer_media_center') }}"

# sensor.apk_expiration_near
# Return the expiration date if it is within 60 days.

- name: "APK Expiration Near"
  state: >
    {% if
       ((as_timestamp(strptime(states('sensor.toyota_53xdsr_apk_expiration'),
                               '%Y-%m-%d')) / 86400) | int )
       -
       ((as_timestamp(strptime(states('sensor.date'),
                               '%Y-%m-%d')) / 86400) | int )
       < 60 %}
    {{ states('sensor.toyota_53xdsr_apk_expiration') }}
    {% else %} nog_lang_niet {% endif %}

# For testing and development
- name: Dummy
  state: "0"

- name: Uit
  state: "Uit"

binary_sensor:          ################

# binary_sensor.pollen
# Returns true if any of the pollen sensors is not 'none'.

  - name: "Pollen"
    state: >
      {{ states('sensor.tomorrow_io_home_tree_pollen_index')|int(0) > 0
         or
         states('sensor.tomorrow_io_home_grass_pollen_index')|int(0) > 0
         or
         states('sensor.tomorrow_io_home_weed_pollen_index')|int(0) > 0
      }}
      
  - name: "Pollen Kleenex"
    state: >
      {{ states('sensor.kleenex_tree_pollen')|int(0) > 0
         or
         states('sensor.kleenex_grass_pollen')|int(0) > 0
         or
         states('sensor.kleenex_weed_pollen')|int(0) > 0
      }}
      
