# Oven                                  -*- hass -*-

# Entities:
#
# sensor.aeg_oven_appliancestate
# switch.aeg_oven_cavitylight
# sensor.aeg_oven_connectivitystate
# sensor.aeg_oven_displaytemperaturec
# binary_sensor.aeg_oven_doorstate
# select.aeg_oven_program
# sensor.aeg_oven_remotecontrol
# sensor.aeg_oven_runningtime
# sensor.aeg_oven_starttime
# sensor.aeg_oven_targetduration
# sensor.aeg_oven_
# button.aeg_oven_executecommand
# sensor.aeg_oven_executecommand_2


#   sensor.aeg_oven_alerts
#   sensor.aeg_oven_appliancestate
#     Ready To Start / RUNNING / End Of Cycle
#   select.aeg_oven_cavitylight
#     False / True
#   sensor.aeg_oven_connectivitystate
#     CONNECTED / DISCONNECTED
#   binary_sensor.aeg_oven_doorstate
#   select.aeg_oven_program
#     No Program / Conventional Cooking / ...
#   sensor.aeg_oven_remotecontrol
#     - Remote Control Enabled for No Safety Relevant Operations
#     - ENABLED
#     - Temporary Locked
#   sensor.aeg_oven_runningtime
#     Total working time
#   button.aeg_oven_executecommand
#     START
#   number.aeg_oven_starttime
#     Oven starts in ... (-1 if n/a)
#   button.aeg_oven_executecommand_2
#     STOPRESET
#   number.aeg_oven_targetduration
#     Target duration 
#   sensor.aeg_oven_displaytemperaturec
#     Actual temperature
#   number.aeg_oven_targettemperature
#     Target temperature
#   sensor.aeg_oven_timetoend
#     Oven will finish in ... seconds (-1 or 0 if n/a)

template:

  binary_sensor:
      
    - name: "AEG Oven Light"
      unique_id: binary_sensor_aeg_oven_light
      state: >-
        {{ states('switch.aeg_oven_cavitylight')|lower == 'on' }}
      device_class: light
      icon: mdi:lightbulb-outline

  sensor:

    - name: "AEG Oven Program"
      unique_id: sensor_aeg_oven_program
      state: "{{ states('select.aeg_oven_program') }}"
      icon: mdi:script-outline

    - name: "AEG Oven Starttime"
      unique_id: sensor_aeg_oven_start
      state: "{{ states('number.aeg_oven_starttime') }}"
      icon: mdi:clock-start
      unit_of_measurement: min

    - name: "AEG Oven Targettemperature"
      unique_id: sensor_aeg_oven_targettemperature
      state: "{{ states('number.aeg_oven_targettemperaturec')|int }}"
      icon: mdi:thermostat
      device_class: temperature
      unit_of_measurement: "°C"

    - name: "AEG Oven Displaytemperature"
      unique_id: sensor_aeg_oven_displaytemperature
      state: "{{ states('sensor.aeg_oven_displaytemperaturec')|int }}"
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: "°C"

  number:

    - name: "AEG Oven Targetduration Minutes"
      unique_id: number_aeg_oven_targetduration_m
      state: "{{ states('number.aeg_oven_targetduration') | int // 60 }}"
      icon: mdi:ray-vertex
      unit_of_measurement: min
      step: 1
      max: 1439
      set_value:
        - service: number.set_value
          target:
            entity_id: number.aeg_oven_targetduration
          data:
            value: "{{ value * 60 }}"

automation:

  - id: Automation__Oven_Reached_Temperature
    alias: Oven Reached Temperature
    description: "The oven reached the target temperature."
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.aeg_oven_displaytemperature
        value_template: >-
          {{ states('sensor.aeg_oven_displaytemperature')|int - states('sensor.aeg_oven_targettemperature')|int }}
        above: -1
    action:
      - service: telegram_bot.send_message
        data:
          message: >
            Oven op temperatuur ({{ states('sensor.aeg_oven_displaytemperature') }} °C na
            {{ states('sensor.aeg_oven_runningtime') }} min.)
