# Devices - all devices                 -*- hass -*-

light:

  - name: Woonkamer Verlichting
    platform: group
    unique_id: lightgroup_woonkamer_verlichting
    entities:
      - light.woonkamer_hoek
      - light.woonkamer_tafeltje
      - light.woonkamer_wand
      - light.woonkamer_totem
      - light.woonkamer_heks
      - light.woonkamer_tafel
      
  - name: Woonkamer Wand
    platform: group
    unique_id: lightgroup_woonkamer_wand
    entities:
      - light.woonkamer_wand_l
      - light.woonkamer_wand_r
      
  - name: Hal Verlichting
    platform: group
    unique_id: lightgroup_hal_verlichting
    entities:
      - light.hal_hoek
      
  - name: Slaapkamer Verlichting
    platform: group
    unique_id: lightgroup_slaapkamer_verlichting
    entities:
      - light.slaapkamer_avondlichtje

  - name: Badkamer Verlichting
    platform: group
    unique_id: lightgroup_badkamer_verlichting
    entities:
      - light.badkamer_verlichting_plafond

  - name: Keuken Aanrecht Verlichting
    platform: group
    unique_id: lightgroup_keuken_aanrecht_verlichting
    entities:
      - light.keuken_aanrecht_klein
      - light.keuken_aanrecht_groot

  - name: Keuken Kook Verlichting
    platform: group
    unique_id: lightgroup_keuken_kook_verlichting
    entities:
      - light.keuken_kook_links
      - light.keuken_kook_rechts

  - name: Keuken Verlichting
    platform: group
    unique_id: lightgroup_keuken_verlichting
    entities:
      - light.keuken_aanrecht_verlichting
      - light.keuken_kook_verlichting

  - name: Alle Verlichting
    platform: group
    unique_id: lightgroup_alle_verlichting
    entities:
      - light.woonkamer_verlichting
      - light.hal_verlichting
      - light.slaapkamer_avondlichtje
      - light.badkamer_verlichting
      - light.keuken_verlichting
      - light.buitenverlichting_achter
   
  - name: Morning Lights
    platform: group
    unique_id: lightgroup_morning_lights
    entities:
      - light.woonkamer_hoek
      - light.hal_hoek

  - name: Evening Lights
    platform: group
    unique_id: lightgroup_evening_lights
    entities:
      - light.woonkamer_tafeltje
      - light.keuken_kook_rechts
      - light.morning_lights
#      - light.balkonkerstverlichting
   
  - name: SlaapkamerMC Signals
    platform: group
    unique_id: lightgroup_slaapkamermc_signals
    entities:
      - light.bulb01
      - light.woonkamer_heks

notify:
  - platform: group
    name: Johan TTS
    services:
      - service: mobile_app_sm_a366b
        data:
          message: TTS
          data:
            priority: high
            ttl: 0
            media_stream: "alarm_stream_max"
            importance: high
      - service: mobile_app_sm_t830
        data:
          message: TTS
          data:
            priority: high
            ttl: 0
            media_stream: "alarm_stream_max"
            importance: high
      
script:

  # A kind of global sanitizer. Turn off everything...
  
  turn_off_everything:

    alias: Turn Off Everything
    icon: mdi:lightbulb-group-outline
    mode: restart

    sequence:

      - repeat:
          for_each: |
            {{ state_attr("light.alle_verlichting", "entity_id") | list }}
          sequence:
          - service: light.turn_off
            target:
              entity_id: '{{ repeat.item }}'
          - delay:
              seconds: 1

      - repeat:
          for_each:
            - switch.slaapkamer_media_center
            - switch.woonkamer_sound_system
            - switch.keuken_afzuigkap
            - switch.radiatorfans
            - switch.pswm01
            - switch.pswm02
          sequence:
            - service: switch.turn_off
              target:
                entity_id: "{{ repeat.item }}"        
            - delay:
                seconds: 1

automation:

  # A kind of global sanitizer. Turn off everything...

  - alias: Turn Off Everything
    id: Automation__Turn_Off_Everything
    mode: single
    trigger:
      - platform: time
        at: "01:00:00"
    action:
      - service: script.turn_off_everything
      - service: mqtt.publish
        data:
          topic: cmnd/tasm19/var1
          payload: 1
      - service: mqtt.publish
        data:
          topic: cmnd/tasm22/var1
          payload: 2

  - id: Automation__Shel01_Temperature_Guard
    alias: Shel01 Temperature Guard
    description: Alarm if the Shelley temperature gets too High.
    mode: single

    trigger:
      - platform: numeric_state
        entity_id: sensor.shelly1l_1_tasmota_analog_temperature
        above: '60'

    condition: []

    action:
      - service: notify.notify
        data:
          message: Shelley temperature high!
      - action: notify.default
        data:
          message: Shelley temperature {{ states('sensor.shelly1l_1_tasmota_analog_temperature')
            }} 째C

mqtt:
  sensor:
    - name: Phoenix NVMe0 Temperature
      state_topic: phoenix/nvme0/status
      device_class: Temperature
      unique_id: sensor__phoenix_nvme0_temperature
      unit_of_measurement: "째C"
      value_template: "{{ value_json.temperature }}"

command_line:

  # CPU temperature when running on T520.
  - sensor:
      name: T520 CPU Temperature
      unique_id: sensor_t520_cpu_temperature
      command: "cat /sys/class/hwmon/hwmon0/temp1_input"
      device_class: temperature
      unit_of_measurement: "째C"
      value_template: "{{ value | multiply(0.001) | round(1) }}"
      scan_interval: 120

#  # CPU temperature when running on RPi4.
#  - sensor:
#      name: RPi CPU Temperature
#      unique_id: sensor_rpi_cpu_temperature
#      command: "cat /sys/class/thermal/thermal_zone0/temp"
#      device_class: temperature
#      unit_of_measurement: "째C"
#      value_template: "{{ value | multiply(0.001) | round(1) }}"
#      scan_interval: 120

template:
  - sensor:
      name: Nextcloud Free Space
      unique_id: nextcloud_free_space
      unit_of_measurement: "GiB"
      state: >-
        {{ ((states('sensor.nextcloud_nextcloud_system_freespace')|int(0))/1073741824)|int }}

switch:
  
  - platform: template

    switches:
      radiatorfans:
        unique_id: switch_radiatorfans
        friendly_name: Radiator Fans
        availability_template: '{{ false }}'
        # value_template: "{{ is_state('switch.source', 'on') }}"
        turn_on:
          # service: switch.turn_on
          # target:
          #   entity_id: switch.target
        turn_off:
          # service: switch.turn_off
          # target:
          #   entity_id: switch.target
